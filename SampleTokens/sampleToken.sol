
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

contract sampleToken {

    struct CarToken {
        string name;
        string color;
        string country;
        uint horsePower;
    }

    CarToken[] tokensArr;

    mapping(uint => uint) tokenPrice;
    mapping(uint => uint) tokenToOwner;


    function createToken(string name, string color, string country, uint horsePower) public checkOwnerAndAccept{
        tvm.accept();
        bool flag = true;
        // Проверка на уникальность имени
        for(uint256 i = 0; i < tokensArr.length; i++) {
            if(name == tokensArr[i].name) {
                flag = false;
            }
        }
        if(flag) {
            tokensArr.push(CarToken(name, color, country, horsePower));
            uint keyAsLastNum = tokensArr.length - 1;
            tokenToOwner[keyAsLastNum] = msg.pubkey();
        }
    }

    function getTokenInfo(uint tokenId) public view returns (string tokenName, string tokenColor, string tokenCountry, uint tokenHS) {
        tokenName = tokensArr[tokenId].name;
        tokenColor = tokensArr[tokenId].color;
        tokenCountry = tokensArr[tokenId].country;
        tokenHS = tokensArr[tokenId].horsePower;
    }

    //Назначение цены токена
    function setTokenPrice(uint tokenId, uint price) public {
        require(tokenToOwner[tokenId] == msg.pubkey(), 101);
        tvm.accept();
        tokenPrice[tokenId] = price;
    }
    
    // Проверка цены токена
    function getTokenPrice(uint tokenId) public view returns (uint) {
        return tokenPrice[tokenId];
    }


    modifier checkOwnerAndAccept {
		require(msg.pubkey() == tvm.pubkey(), 102);
		tvm.accept();
		_;
	}

    constructor() public {
        require(tvm.pubkey() != 0, 101);
        require(msg.pubkey() == tvm.pubkey(), 102);
        tvm.accept();
    }   
}
