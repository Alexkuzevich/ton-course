
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

import 'WarUnit.sol';

contract Warrior is WarUnit{

    uint private unitDefense;
    uint private unitAttack;
    uint private unitHealth = 10;   
    address ownerAddress; 
    address unitOnStation;

    constructor(address baseStationAddress, uint defense, uint attack) WarUnit(defense, attack) public {

        require(tvm.pubkey() != 0, 101);
        require(msg.pubkey() == tvm.pubkey(), 102);
        tvm.accept();    

        unitOnStation = baseStationAddress;
        unitDefense = defense;
        unitAttack = attack;    
    }

    // Получить силу защиты
    function getDefense() virtual public view override returns (uint){
        tvm.accept();
        return unitDefense;
    }

    // Получить силу атаки
    function getAttack() virtual public view override returns (uint){
        tvm.accept();
        return unitAttack;
    }

    // Получить текущее здоровье
    function getCurrentHealth() virtual public view override returns (uint){
        tvm.accept();
        return unitHealth;
    }

    // Обработка смерти
    function deathCase(address dest) virtual view public override {
        tvm.accept();
        if (getCurrentHealth() <= 0) {
            sendAllAndDelete(dest);
        }
    }
    
    // Отправка всех денег по адресу и уничтожение
    function sendAllAndDelete(address dest) public pure override checkOwnerAndAccept {
        tvm.accept();
        dest.transfer(1, false, 160);
    }

}